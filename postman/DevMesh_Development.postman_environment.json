{
	"id": "devmesh-development-env",
	"name": "DevMesh Development",
	"values": [
		{
			"key": "base_url",
			"value": "http://localhost:8081",
			"type": "default",
			"enabled": true,
			"description": "REST API base URL for local development"
		},
		{
			"key": "mcp_ws_url",
			"value": "ws://localhost:8080",
			"type": "default",
			"enabled": true,
			"description": "MCP WebSocket server URL"
		},
		{
			"key": "api_version",
			"value": "v1",
			"type": "default",
			"enabled": true,
			"description": "API version"
		},
		{
			"key": "api_key",
			"value": "dev-admin-key-1234567890",
			"type": "default",
			"enabled": true,
			"description": "Default admin API key for development"
		},
		{
			"key": "tenant_id",
			"value": "00000000-0000-0000-0000-000000000001",
			"type": "default",
			"enabled": true,
			"description": "Default tenant ID for development"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "JWT authentication token (set dynamically after login)"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Refresh token (set dynamically after login)"
		},
		{
			"key": "token_expiry",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Token expiration timestamp (set dynamically)"
		},
		{
			"key": "session_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current session ID (set dynamically)"
		},
		{
			"key": "tool_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current tool ID (set dynamically)"
		},
		{
			"key": "template_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current template ID (set dynamically)"
		},
		{
			"key": "context_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current context ID (set dynamically)"
		},
		{
			"key": "org_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Organization ID (set dynamically)"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "User ID (set dynamically)"
		},
		{
			"key": "request_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Request ID for tracing (generated per request)"
		},
		{
			"key": "rate_limit_remaining",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Remaining rate limit (updated from response headers)"
		},
		{
			"key": "api_rate_limit",
			"value": "1000",
			"type": "default",
			"enabled": true,
			"description": "API rate limit per window (relaxed for development)"
		},
		{
			"key": "api_rate_window",
			"value": "60",
			"type": "default",
			"enabled": true,
			"description": "API rate limit window in seconds"
		},
		{
			"key": "api_burst_factor",
			"value": "3",
			"type": "default",
			"enabled": true,
			"description": "API burst factor"
		},
		{
			"key": "jwt_expiration",
			"value": "3600",
			"type": "default",
			"enabled": true,
			"description": "JWT expiration in seconds (1 hour for development)"
		},
		{
			"key": "refresh_expiration",
			"value": "86400",
			"type": "default",
			"enabled": true,
			"description": "Refresh token expiration in seconds (24 hours for development)"
		},
		{
			"key": "login_attempts",
			"value": "10",
			"type": "default",
			"enabled": true,
			"description": "Max login attempts per minute (relaxed for development)"
		},
		{
			"key": "lockout_duration",
			"value": "60",
			"type": "default",
			"enabled": true,
			"description": "Lockout duration in seconds (1 minute for development)"
		},
		{
			"key": "db_host",
			"value": "localhost",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL host"
		},
		{
			"key": "db_port",
			"value": "5432",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL port"
		},
		{
			"key": "db_name",
			"value": "devops_mcp_dev",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL database name"
		},
		{
			"key": "redis_host",
			"value": "127.0.0.1",
			"type": "default",
			"enabled": true,
			"description": "Redis host (SSH tunnel to ElastiCache)"
		},
		{
			"key": "redis_port",
			"value": "6379",
			"type": "default",
			"enabled": true,
			"description": "Redis port"
		},
		{
			"key": "enable_swagger",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable Swagger UI in development"
		},
		{
			"key": "enable_debug",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable debug mode in development"
		},
		{
			"key": "enable_pprof",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable profiling endpoints in development"
		},
		{
			"key": "cors_allowed_origins",
			"value": "*",
			"type": "default",
			"enabled": true,
			"description": "CORS allowed origins (all in development)"
		},
		{
			"key": "require_auth",
			"value": "false",
			"type": "default",
			"enabled": true,
			"description": "Authentication requirement (disabled for easier testing)"
		},
		{
			"key": "aws_region",
			"value": "us-east-1",
			"type": "default",
			"enabled": true,
			"description": "AWS region for services"
		},
		{
			"key": "s3_bucket",
			"value": "mcp-dev-contexts",
			"type": "default",
			"enabled": true,
			"description": "S3 bucket for context storage"
		},
		{
			"key": "github_api_url",
			"value": "https://api.github.com",
			"type": "default",
			"enabled": true,
			"description": "GitHub API URL"
		},
		{
			"key": "use_mock_github",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Use mock GitHub adapter in development"
		},
		{
			"key": "mock_github_url",
			"value": "http://localhost:8081/mock-github",
			"type": "default",
			"enabled": true,
			"description": "Mock GitHub endpoint URL"
		},
		{
			"key": "sonarqube_url",
			"value": "http://localhost:9000",
			"type": "default",
			"enabled": true,
			"description": "SonarQube URL"
		},
		{
			"key": "test_api_key_readonly",
			"value": "dev-readonly-key-1234567890",
			"type": "default",
			"enabled": true,
			"description": "Read-only API key for testing"
		},
		{
			"key": "test_api_key_tenant1",
			"value": "test-key-tenant-1",
			"type": "default",
			"enabled": true,
			"description": "Test API key for tenant 1"
		},
		{
			"key": "test_api_key_tenant2",
			"value": "test-key-tenant-2",
			"type": "default",
			"enabled": true,
			"description": "Test API key for tenant 2"
		},
		{
			"key": "test_tenant_id_2",
			"value": "00000000-0000-0000-0000-000000000002",
			"type": "default",
			"enabled": true,
			"description": "Test tenant ID 2 for multi-tenant testing"
		},
		{
			"key": "test_api_key_agent1",
			"value": "test-key-agent-1",
			"type": "default",
			"enabled": true,
			"description": "Test API key for agent 1"
		},
		{
			"key": "test_api_key_agent2",
			"value": "test-key-agent-2",
			"type": "default",
			"enabled": true,
			"description": "Test API key for agent 2"
		},
		{
			"key": "test_api_key_frontend",
			"value": "test-key-frontend-dev",
			"type": "default",
			"enabled": true,
			"description": "Test API key for frontend developer agent"
		},
		{
			"key": "test_api_key_backend",
			"value": "test-key-backend-dev",
			"type": "default",
			"enabled": true,
			"description": "Test API key for backend developer agent"
		},
		{
			"key": "test_api_key_ml",
			"value": "test-key-ml-engineer",
			"type": "default",
			"enabled": true,
			"description": "Test API key for ML engineer agent"
		},
		{
			"key": "test_api_key_devops",
			"value": "test-key-devops",
			"type": "default",
			"enabled": true,
			"description": "Test API key for DevOps agent"
		},
		{
			"key": "websocket_max_connections",
			"value": "1000",
			"type": "default",
			"enabled": true,
			"description": "Maximum WebSocket connections"
		},
		{
			"key": "websocket_rate_limit",
			"value": "100",
			"type": "default",
			"enabled": true,
			"description": "WebSocket messages per second"
		},
		{
			"key": "websocket_burst",
			"value": "200",
			"type": "default",
			"enabled": true,
			"description": "WebSocket burst capacity"
		},
		{
			"key": "embedding_strategy",
			"value": "speed",
			"type": "default",
			"enabled": true,
			"description": "Embedding strategy (speed for development)"
		},
		{
			"key": "max_tokens_per_request",
			"value": "8000",
			"type": "default",
			"enabled": true,
			"description": "Maximum tokens per embedding request"
		},
		{
			"key": "max_cost_per_day",
			"value": "1.0",
			"type": "default",
			"enabled": true,
			"description": "Maximum embedding cost per day (USD)"
		},
		{
			"key": "worker_concurrency",
			"value": "10",
			"type": "default",
			"enabled": true,
			"description": "Worker concurrent processing limit"
		},
		{
			"key": "redis_stream_name",
			"value": "webhook-events",
			"type": "default",
			"enabled": true,
			"description": "Redis stream name for webhooks"
		},
		{
			"key": "redis_consumer_group",
			"value": "webhook-processors",
			"type": "default",
			"enabled": true,
			"description": "Redis consumer group name"
		}
	],
	"_postman_variable_scope": "environment",
	"_postman_exported_at": "2025-01-10T00:00:00.000Z",
	"_postman_exported_using": "Postman/10.0.0"
}