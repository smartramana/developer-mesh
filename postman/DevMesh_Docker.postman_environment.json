{
	"id": "devmesh-docker-env",
	"name": "DevMesh Docker",
	"values": [
		{
			"key": "base_url",
			"value": "http://localhost:8081",
			"type": "default",
			"enabled": true,
			"description": "REST API base URL (Docker container mapped to port 8081)"
		},
		{
			"key": "mcp_ws_url",
			"value": "ws://localhost:8085",
			"type": "default",
			"enabled": true,
			"description": "Edge MCP WebSocket server URL (Docker container mapped to port 8085)"
		},
		{
			"key": "api_version",
			"value": "v1",
			"type": "default",
			"enabled": true,
			"description": "API version"
		},
		{
			"key": "api_key",
			"value": "dev-admin-key-1234567890",
			"type": "default",
			"enabled": true,
			"description": "Default admin API key for Docker environment"
		},
		{
			"key": "tenant_id",
			"value": "00000000-0000-0000-0000-000000000001",
			"type": "default",
			"enabled": true,
			"description": "Default tenant ID for Docker environment"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "JWT authentication token (set dynamically after login)"
		},
		{
			"key": "refresh_token",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Refresh token (set dynamically after login)"
		},
		{
			"key": "token_expiry",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Token expiration timestamp (set dynamically)"
		},
		{
			"key": "session_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current session ID (set dynamically)"
		},
		{
			"key": "tool_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current tool ID (set dynamically)"
		},
		{
			"key": "template_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current template ID (set dynamically)"
		},
		{
			"key": "context_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Current context ID (set dynamically)"
		},
		{
			"key": "org_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Organization ID (set dynamically)"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "User ID (set dynamically)"
		},
		{
			"key": "request_id",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Request ID for tracing (generated per request)"
		},
		{
			"key": "rate_limit_remaining",
			"value": "",
			"type": "default",
			"enabled": true,
			"description": "Remaining rate limit (updated from response headers)"
		},
		{
			"key": "api_rate_limit",
			"value": "100",
			"type": "default",
			"enabled": true,
			"description": "API rate limit per window (standard Docker limit)"
		},
		{
			"key": "api_rate_window",
			"value": "60",
			"type": "default",
			"enabled": true,
			"description": "API rate limit window in seconds"
		},
		{
			"key": "api_burst_factor",
			"value": "3",
			"type": "default",
			"enabled": true,
			"description": "API burst factor"
		},
		{
			"key": "jwt_secret",
			"value": "docker-jwt-secret-change-in-production",
			"type": "default",
			"enabled": true,
			"description": "JWT secret for Docker environment"
		},
		{
			"key": "jwt_expiration",
			"value": "3600",
			"type": "default",
			"enabled": true,
			"description": "JWT expiration in seconds (1 hour)"
		},
		{
			"key": "refresh_expiration",
			"value": "86400",
			"type": "default",
			"enabled": true,
			"description": "Refresh token expiration in seconds (24 hours)"
		},
		{
			"key": "login_attempts",
			"value": "5",
			"type": "default",
			"enabled": true,
			"description": "Max login attempts per minute"
		},
		{
			"key": "lockout_duration",
			"value": "900",
			"type": "default",
			"enabled": true,
			"description": "Lockout duration in seconds (15 minutes)"
		},
		{
			"key": "db_host",
			"value": "localhost",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL host (external access via port mapping)"
		},
		{
			"key": "db_port",
			"value": "5432",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL port"
		},
		{
			"key": "db_name",
			"value": "devmesh_development",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL database name"
		},
		{
			"key": "db_user",
			"value": "devmesh",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL username"
		},
		{
			"key": "db_password",
			"value": "devmesh",
			"type": "default",
			"enabled": true,
			"description": "PostgreSQL password"
		},
		{
			"key": "redis_host",
			"value": "localhost",
			"type": "default",
			"enabled": true,
			"description": "Redis host (external access via port mapping)"
		},
		{
			"key": "redis_port",
			"value": "6379",
			"type": "default",
			"enabled": true,
			"description": "Redis port"
		},
		{
			"key": "encryption_master_key",
			"value": "dev_master_key_32_chars_long123",
			"type": "default",
			"enabled": true,
			"description": "Encryption master key for Docker environment"
		},
		{
			"key": "mockserver_url",
			"value": "http://localhost:8082",
			"type": "default",
			"enabled": true,
			"description": "Mock server URL (external port)"
		},
		{
			"key": "localstack_url",
			"value": "http://localhost:4566",
			"type": "default",
			"enabled": true,
			"description": "LocalStack URL for AWS services"
		},
		{
			"key": "s3_bucket",
			"value": "mcp-contexts",
			"type": "default",
			"enabled": true,
			"description": "S3 bucket for context storage (LocalStack)"
		},
		{
			"key": "s3_endpoint",
			"value": "http://localhost:4566",
			"type": "default",
			"enabled": true,
			"description": "S3 endpoint (LocalStack)"
		},
		{
			"key": "aws_region",
			"value": "us-east-1",
			"type": "default",
			"enabled": true,
			"description": "AWS region for services"
		},
		{
			"key": "github_webhook_secret",
			"value": "docker-github-webhook-secret",
			"type": "default",
			"enabled": true,
			"description": "GitHub webhook secret for Docker"
		},
		{
			"key": "enable_swagger",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable Swagger UI"
		},
		{
			"key": "enable_debug",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable debug mode"
		},
		{
			"key": "cors_allowed_origins",
			"value": "http://localhost:3000,http://localhost:8080",
			"type": "default",
			"enabled": true,
			"description": "CORS allowed origins"
		},
		{
			"key": "environment",
			"value": "docker",
			"type": "default",
			"enabled": true,
			"description": "Environment name"
		},
		{
			"key": "edge_mcp_id",
			"value": "edge-docker-001",
			"type": "default",
			"enabled": true,
			"description": "Edge MCP instance ID"
		},
		{
			"key": "edge_mcp_api_key",
			"value": "devmesh_ab80cbb2438dbb43339c0e3317ab2fc6dd0e046f3b50360df06abb5bae31a210",
			"type": "default",
			"enabled": true,
			"description": "Edge MCP API key"
		},
		{
			"key": "worker_concurrency",
			"value": "5",
			"type": "default",
			"enabled": true,
			"description": "Worker concurrent processing limit"
		},
		{
			"key": "redis_stream_name",
			"value": "webhook-events",
			"type": "default",
			"enabled": true,
			"description": "Redis stream name for webhooks"
		},
		{
			"key": "redis_consumer_group",
			"value": "webhook-processors",
			"type": "default",
			"enabled": true,
			"description": "Redis consumer group name"
		},
		{
			"key": "use_localstack",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Use LocalStack for AWS services"
		},
		{
			"key": "mock_responses_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable mock responses"
		},
		{
			"key": "prometheus_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable Prometheus metrics"
		},
		{
			"key": "rate_limit_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable rate limiting"
		},
		{
			"key": "feature_webhooks_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable webhooks feature"
		},
		{
			"key": "feature_vector_search_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable vector search feature"
		},
		{
			"key": "feature_github_integration_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable GitHub integration feature"
		},
		{
			"key": "embedding_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable embedding services"
		},
		{
			"key": "bedrock_enabled",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Enable AWS Bedrock for embeddings"
		},
		{
			"key": "allow_localhost_urls",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Allow localhost URLs in Docker environment"
		},
		{
			"key": "allow_private_network_urls",
			"value": "true",
			"type": "default",
			"enabled": true,
			"description": "Allow private network URLs in Docker environment"
		}
	],
	"_postman_variable_scope": "environment",
	"_postman_exported_at": "2025-01-10T00:00:00.000Z",
	"_postman_exported_using": "Postman/10.0.0"
}