apiVersion: v1
kind: ConfigMap
metadata:
  name: rag-loader-config
  namespace: devmesh
  labels:
    app: rag-loader
data:
  rag-loader.yaml: |
    # RAG Loader Production Configuration

    service:
      port: 8084
      metrics_port: 9094
      shutdown_timeout: 30s

    # Data sources configuration
    sources:
      - id: github_devmesh
        type: github
        enabled: true
        schedule: "0 */6 * * *"  # Every 6 hours
        config:
          owner: developer-mesh
          repo: developer-mesh
          branch: main
          include_patterns:
            - "*.go"
            - "*.md"
            - "*.yaml"
            - "*.sql"
          exclude_patterns:
            - "vendor/**"
            - "**/*_test.go"
            - ".git/**"
            - "node_modules/**"

      - id: docs_site
        type: web
        enabled: false  # Enable when ready
        schedule: "0 0 * * *"  # Daily at midnight
        config:
          base_url: https://docs.devmesh.io
          max_depth: 3
          follow_external: false
          respect_robots: true
          include_patterns:
            - "/docs/**"
            - "/api/**"
          user_agent: "DevMesh-RAG-Loader/1.0"

    # Processing configuration
    processing:
      chunking:
        default_strategy: semantic
        strategies:
          fixed:
            max_tokens: 512
            overlap_tokens: 50
          semantic:
            max_tokens: 1024
            similarity_threshold: 0.8
          markdown:
            respect_headers: true
            max_section_size: 2048

      embedding:
        model: amazon.titan-embed-text-v2:0
        batch_size: 100
        max_retries: 3
        retry_delay: 1s
        timeout: 30s

      deduplication:
        enabled: true
        bloom_filter_size: 1000000
        false_positive_rate: 0.01

    # Storage configuration
    storage:
      batch_size: 1000
      compression: true
      retention_days: 365

    # Scheduler configuration
    scheduler:
      enable_api: true
      default_schedule: "0 */6 * * *"
      max_concurrent_jobs: 3
      job_timeout: 3600s

    # Rate limiting
    rate_limiting:
      enabled: true
      requests_per_second: 100
      burst_size: 50
      per_source:
        github: 10
        web: 20
        s3: 50
        confluence: 10
        jira: 10

    # Caching configuration
    cache:
      enabled: true
      default_ttl: 24h
      max_memory_mb: 1024
      eviction_policy: "allkeys-lru"
      key_prefix: "rag:"

    # Circuit breaker configuration
    circuit_breaker:
      enabled: true
      max_failures: 5
      reset_timeout: 60s
      half_open_max_requests: 3
      failure_threshold: 0.5
      minimum_request_count: 10

    # Retry configuration
    retry:
      max_retries: 3
      initial_delay: 1s
      max_delay: 30s
      multiplier: 2.0

    # Search configuration
    search:
      hybrid_weight: 0.7  # 70% vector, 30% BM25
      mmr_lambda: 0.7     # 70% relevance, 30% diversity
      max_results: 20
      min_score: 0.4
      enable_reranking: true

    # Monitoring
    monitoring:
      metrics_enabled: true
      tracing_enabled: true
      log_level: info
      alert_on_failure: true
      quality_tracking: true

    # Database configuration
    database:
      host: ${DATABASE_HOST}
      port: 5432
      database: ${DATABASE_NAME}
      username: ${DATABASE_USERNAME}
      password: ${DATABASE_PASSWORD}
      sslmode: require
      max_conns: 25
      max_idle_conns: 5
      conn_max_lifetime: 300s

    # Redis configuration
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}
      db: 0
      pool_size: 10
      min_idle_conns: 5
      dial_timeout: 5s
      read_timeout: 3s
      write_timeout: 3s
