# Root Makefile for developer-mesh workspace
.PHONY: all build test docker clean lint migrate

# Discover all applications
APPS := $(shell ls apps/)

# Build directories
BIN_DIR := bin
BUILD_DIR := build

all: build

# Create necessary directories
$(BIN_DIR):
	mkdir -p $(BIN_DIR)

# Build all applications
build: $(BIN_DIR)
	@for app in $(APPS); do \
		echo "Building $$app..."; \
		$(MAKE) -C apps/$$app build || exit 1; \
	done

# Run tests across all modules
test:
	@for app in $(APPS); do \
		echo "Testing $$app..."; \
		$(MAKE) -C apps/$$app test || exit 1; \
	done
	@for pkg in $(shell ls pkg/); do \
		echo "Testing pkg/$$pkg..."; \
		cd pkg/$$pkg && go test ./... && cd ../.. || exit 1; \
	done

# Run linting across all modules
lint:
	@for app in $(APPS); do \
		echo "Linting $$app..."; \
		$(MAKE) -C apps/$$app lint || exit 1; \
	done
	@for pkg in $(shell ls pkg/); do \
		echo "Linting pkg/$$pkg..."; \
		cd pkg/$$pkg && golangci-lint run ./... && cd ../.. || exit 1; \
	done

# Build Docker images for all applications
docker:
	@for app in $(APPS); do \
		echo "Building Docker image for $$app..."; \
		$(MAKE) -C apps/$$app docker || exit 1; \
	done

# Clean all build artifacts
clean:
	@for app in $(APPS); do \
		echo "Cleaning $$app..."; \
		$(MAKE) -C apps/$$app clean || exit 1; \
	done
	rm -rf $(BIN_DIR)/*

# Special targets for specific applications
edge-mcp:
	$(MAKE) -C apps/edge-mcp $(MAKECMDGOALS)

worker:
	$(MAKE) -C apps/worker $(MAKECMDGOALS)

migrate:
	$(MAKE) -C apps/migrate $(MAKECMDGOALS)

# Run specified app (usage: make run-edge-mcp)
run-%:
	$(MAKE) -C apps/$* run
