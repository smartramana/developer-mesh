openapi: 3.0.3
info:
  title: Developer Mesh Platform API
  description: |
    The Developer Mesh (Model Context Protocol) Platform is an AI Agent Orchestration Platform that enables intelligent routing and coordination of multiple AI agents for DevOps workflows.
    
    ## Overview
    This API enables:
    - **AI Agent Orchestration**: Register, manage, and coordinate multiple AI agents
    - **Context Management**: Store and retrieve conversation contexts with S3 persistence
    - **Tool Integration**: Execute actions across GitHub, Harness, SonarQube, and more
    - **Multi-Agent Embeddings**: Agent-specific embedding generation with smart provider routing
    - **Cross-Model Search**: Semantic search across embeddings from different models
    - **Binary WebSocket Protocol**: High-performance real-time communication
    - **CRDT Collaboration**: Real-time collaborative features with conflict resolution
    - **Workflow Orchestration**: Multi-step workflows with agent task assignment
    - **Webhook Processing**: Real-time event processing from external services
    
    ## Authentication
    Most API requests to /api/v1/* endpoints require authentication via headers:
    - **API Key**: Pass in `Authorization` header as `Bearer <key>` or in `X-API-Key` header
    - **JWT Bearer Token**: Pass as `Bearer <token>` in `Authorization` header
    
    Public endpoints (no authentication required):
    - `/api/v1/auth/*` - Registration, login, and password reset
    - `/health`, `/healthz`, `/readyz` - Health checks
    - `/metrics` - Prometheus metrics
    - `/api/webhooks/*` - Webhook endpoints
    
    ### Enhanced Security Features
    - Minimum 16-character API keys
    - Configurable failed attempt limits with lockout
    - Scope-based authorization
    - Audit logging for all authentication events
    
    ## Rate Limiting
    - **Default**: 100 requests/minute per identifier
    - **Authentication endpoints**: 5 attempts before 15-minute lockout
    - **Per-tenant limits**: Configurable based on subscription tier
    - **Headers**: X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset
    
  version: 1.0.0
  contact:
    name: Developer Mesh Support
    url: https://github.com/developer-mesh/developer-mesh/issues
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.dev-mesh.io/api/v1
    description: Production API Server
  - url: http://localhost:8081/api/v1
    description: Local REST API Server
  - url: http://localhost:8080/api/v1
    description: Local MCP Server (WebSocket)

security:
  - ApiKeyAuth: []
  - BearerAuth: []

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
      description: API key authentication (with or without 'Bearer' prefix)
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT bearer token authentication

tags:
  - name: Authentication
    description: Organization registration, user authentication and management
  - name: Health
    description: Health check and monitoring endpoints
  - name: Contexts
    description: MCP context management operations
  - name: Dynamic Tools
    description: Dynamic tool registration and management endpoints
  - name: Agents
    description: AI agent management with enhanced lifecycle support
  - name: Models
    description: AI model configuration and management
  - name: Embeddings
    description: Multi-agent embedding generation (conditional - only if service initializes)
  - name: Webhooks
    description: Webhook endpoints for external integrations
  - name: Metrics
    description: Prometheus metrics endpoint

paths:
  # Health endpoints
  /health:
    $ref: './core/health.yaml#/paths/~1health'
  
  /healthz:
    $ref: './core/health.yaml#/paths/~1healthz'
  
  /readyz:
    $ref: './core/health.yaml#/paths/~1readyz'
  
  /swagger/{any}:
    $ref: './core/health.yaml#/paths/~1swagger~1{any}'
  
  # Context Management
  /contexts:
    $ref: './core/contexts.yaml#/paths/~1contexts'
  
  /contexts/{contextID}:
    $ref: './core/contexts.yaml#/paths/~1contexts~1{contextID}'
  
  /contexts/{contextID}/search:
    $ref: './core/contexts.yaml#/paths/~1contexts~1{contextID}~1search'
  
  /contexts/{contextID}/summary:
    $ref: './core/contexts.yaml#/paths/~1contexts~1{contextID}~1summary'
  
  # Dynamic Tool Management
  /tools:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools'
  
  /tools/{toolId}:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}'
  
  /tools/discover:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1discover'
  
  /tools/discover/{sessionId}:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1discover~1{sessionId}'
  
  /tools/discover/{sessionId}/confirm:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1discover~1{sessionId}~1confirm'
  
  /tools/{toolId}/health:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}~1health'
  
  /tools/{toolId}/health/refresh:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}~1health~1refresh'
  
  /tools/{toolId}/actions:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}~1actions'
  
  /tools/{toolId}/execute:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}~1execute'
  
  /tools/{toolId}/execute/{action}:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}~1execute~1{action}'
  
  /tools/{toolId}/credentials:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}~1credentials'
  
  /tools/{toolId}/webhook:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1{toolId}~1webhook'
  
  /tools/discover-multiple:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1discover-multiple'
  
  /tools/discover-multiple/create:
    $ref: './core/dynamic_tools.yaml#/paths/~1tools~1discover-multiple~1create'
  
  # Authentication Operations (Public - no auth required)  
  /auth/register/organization:
    $ref: './core/auth.yaml#/paths/~1auth~1register~1organization'
  
  /auth/login:
    $ref: './core/auth.yaml#/paths/~1auth~1login'
  
  /auth/logout:
    $ref: './core/auth.yaml#/paths/~1auth~1logout'
  
  /auth/refresh:
    $ref: './core/auth.yaml#/paths/~1auth~1refresh'
  
  /auth/edge-mcp:
    $ref: './core/auth.yaml#/paths/~1auth~1edge-mcp'
  
  /auth/password/reset:
    $ref: './core/auth.yaml#/paths/~1auth~1password~1reset'
  
  /auth/password/reset/confirm:
    $ref: './core/auth.yaml#/paths/~1auth~1password~1reset~1confirm'
  
  /auth/email/verify:
    $ref: './core/auth.yaml#/paths/~1auth~1email~1verify'
  
  /auth/email/resend:
    $ref: './core/auth.yaml#/paths/~1auth~1email~1resend'
  
  /auth/invitation/{token}:
    $ref: './core/auth.yaml#/paths/~1auth~1invitation~1{token}'
  
  /auth/invitation/accept:
    $ref: './core/auth.yaml#/paths/~1auth~1invitation~1accept'
  
  # User Management Operations (Protected - auth required)
  /users/invite:
    $ref: './core/auth.yaml#/paths/~1users~1invite'
  
  /users:
    $ref: './core/auth.yaml#/paths/~1users'
  
  /users/{id}/role:
    $ref: './core/auth.yaml#/paths/~1users~1{id}~1role'
  
  /users/{id}:
    $ref: './core/auth.yaml#/paths/~1users~1{id}'
  
  # Organization Management (Protected)
  /organization:
    $ref: './core/auth.yaml#/paths/~1organization'
  
  /organization/usage:
    $ref: './core/auth.yaml#/paths/~1organization~1usage'
  
  # User Profile (Protected)
  /profile:
    $ref: './core/auth.yaml#/paths/~1profile'
  
  /profile/password:
    $ref: './core/auth.yaml#/paths/~1profile~1password'
  
  # Agent Management
  /agents:
    $ref: './core/agents.yaml#/paths/~1agents'
  
  /agents/{id}:
    $ref: './core/agents.yaml#/paths/~1agents~1{id}'
  
  # Model Management
  /models:
    $ref: './core/models.yaml#/paths/~1models'
  
  /models/{id}:
    $ref: './core/models.yaml#/paths/~1models~1{id}'
  
  # Embedding Operations (CONDITIONAL - only available if embedding service initializes)
  # NOTE: These endpoints may not be available if embedding providers are not configured
  /embeddings:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings'
  
  /embeddings/batch:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1batch'
  
  /embeddings/search:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1search'
  
  /embeddings/search/cross-model:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1search~1cross-model'
  
  /embeddings/providers/health:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1providers~1health'
  
  /embeddings/agents:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1agents'
  
  /embeddings/agents/{agentId}:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1agents~1{agentId}'
  
  /embeddings/agents/{agentId}/models:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1agents~1{agentId}~1models'
  
  /embeddings/agents/{agentId}/costs:
    $ref: './core/embeddings_v2.yaml#/paths/~1embeddings~1agents~1{agentId}~1costs'
  
  # NOTE: Search, Relationships, Workflows, Tasks, Vectors, and Collaborations 
  # are NOT IMPLEMENTED. These APIs exist in code but are NOT registered in server.go
  
  # Webhook Operations (Public - no auth required for webhooks)
  /api/webhooks/tools/{toolId}:
    $ref: './core/webhooks.yaml#/paths/~1api~1webhooks~1tools~1{toolId}'
  
  # Model Extended Operations
  /models/search:
    $ref: './core/models.yaml#/paths/~1models~1search'
  
  /models/test:
    $ref: './core/models.yaml#/paths/~1models~1test'
  
  # Agent State Management (Enhanced Agent API)
  /agents/{id}/activate:
    $ref: './core/agents.yaml#/paths/~1agents~1{id}~1activate'
  
  /agents/{id}/suspend:
    $ref: './core/agents.yaml#/paths/~1agents~1{id}~1suspend'
  
  /agents/{id}/terminate:
    $ref: './core/agents.yaml#/paths/~1agents~1{id}~1terminate'
  
  /agents/{id}/transition:
    $ref: './core/agents.yaml#/paths/~1agents~1{id}~1transition'
  
  /agents/{id}/health:
    $ref: './core/agents.yaml#/paths/~1agents~1{id}~1health'
  
  /agents/{id}/events:
    $ref: './core/agents.yaml#/paths/~1agents~1{id}~1events'
  
  # Metrics
  /metrics:
    $ref: './core/metrics.yaml#/paths/~1metrics'
  
  # Admin Operations
  /admin/migration-status:
    $ref: './core/health.yaml#/paths/~1admin~1migration-status'
