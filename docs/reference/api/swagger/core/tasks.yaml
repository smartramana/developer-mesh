openapi: 3.0.0
info:
  title: Tasks API
  version: 1.0.0
  description: Task creation and assignment

paths:
  /tasks:
    get:
      tags:
        - Tasks
      summary: List tasks
      description: List all tasks
      operationId: listTasks
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, assigned, in_progress, completed, failed]
        - name: agent_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    
    post:
      tags:
        - Tasks
      summary: Create task
      description: Create a new task
      operationId: createTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskCreate'
      responses:
        '201':
          description: Task created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    get:
      tags:
        - Tasks
      summary: Get task
      description: Get task details by ID
      operationId: getTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found
    
    put:
      tags:
        - Tasks
      summary: Update task
      description: Update task status or details
      operationId: updateTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUpdate'
      responses:
        '200':
          description: Task updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    
    delete:
      tags:
        - Tasks
      summary: Delete task
      description: Delete a task
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Task deleted
        '404':
          description: Task not found

  /tasks/assign:
    post:
      tags:
        - Tasks
      summary: Assign task to agent
      description: Assign a task to an available agent based on capabilities
      operationId: assignTask
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - task_id
              properties:
                task_id:
                  type: string
                agent_id:
                  type: string
                  description: Optional specific agent ID
                strategy:
                  type: string
                  enum: [round-robin, least-loaded, capability-match, performance-based]
                  default: capability-match
      responses:
        '200':
          description: Task assigned
          content:
            application/json:
              schema:
                type: object
                properties:
                  task_id:
                    type: string
                  agent_id:
                    type: string
                  assigned_at:
                    type: string
                    format: date-time

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [pending, assigned, in_progress, completed, failed]
        priority:
          type: string
          enum: [low, medium, high, critical]
        description:
          type: string
        metadata:
          type: object
        assigned_to:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
    
    TaskCreate:
      type: object
      required:
        - type
        - description
      properties:
        type:
          type: string
        description:
          type: string
        priority:
          type: string
          enum: [low, medium, high, critical]
          default: medium
        metadata:
          type: object
    
    TaskUpdate:
      type: object
      properties:
        status:
          type: string
          enum: [pending, assigned, in_progress, completed, failed]
        priority:
          type: string
          enum: [low, medium, high, critical]
        metadata:
          type: object